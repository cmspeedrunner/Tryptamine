fn get(url, tofile = ""){
    if tofile == ""{
        system("curl -s "+url)
    else
        system("curl -s "+url +" -o "+tofile)
    }
}

fn getret(url){

    return system("curl -s "+url)
   
}



fn post(url, data, headers = []){
    cmd = "curl -s -X POST -d " + str(data) + " " + url
    for header in headers {
        cmd = cmd + " -H " + str(header)
    }
    return system(cmd)
}

fn put(url, data, headers = []){
    cmd = "curl -s -X PUT -d " + str(data) + " " + url
    for header in headers {
        cmd = cmd + " -H " + str(header)
    }
    return system(cmd)
}

fn delete(url, headers = []){
    cmd = "curl -s -X DELETE " + url
    for header in headers {
        cmd = cmd + " -H " + str(header)
    }
    return system(cmd)
}

fn head(url){
    return system("curl -s -I " + url)
}

fn download(url, filename){
    system("curl -s -o " + filename + " " + url)
}

fn postfile(url, file, headers = []){
    cmd = "curl -s -X POST -F \"file=@"+file+"\" "+url
    for header in headers {
        cmd = cmd + " -H " + str(header)
    }
    return system(cmd)
}

fn useragent(url, agent){
    return system("curl -s -A \""+agent+"\" " + url)
}

fn timeout(url, seconds){
    return system("curl -s --max-time " + str(seconds) + " " + url)
}

fn followredirects(url){
    return system("curl -s -L " + url)
}

