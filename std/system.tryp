use "std/string"
use "std/list"
use "std/types"


fn systemout(command){
    println(system(command))
}

fn kill(task){
    print("taskkill /T /F /IM "+task)
    system("taskkill /T /F /IM "+task)
}
fn runargs(commandlist){
    for command in commandlist{
        system(command)
    }
}

fn title(title){
    system("title "+str(title))
    return 0
}

fn start(file){
    system("start "+str(file))
    return 0
}

fn getuser(){
    return system("whoami")
}

fn getenv(){
    args = system("path")
    return split(args, ";")
}

fn gettasks(all = null) {
    processes = []
    tasks = system("tasklist")
    tasklist = stack(tasks) 
    for task in tasklist{
        if contains(task, "."){
            name = split(task, ".")
            name = name[0]+".exe"
            if all == null{
                if typeof(indexof(processes, name)) != "list"{
                    if indexof(processes, name) == -1{
                        append(processes, name)
                    }
                }
                
            else
                append(processes, name)
            }
        }

    }
    return processes
}

fn isrunning(process){
    process = "\""+process + "\""
    running = int(system("tasklist | findstr /I "+process+" >nul && echo 1 || echo 0"))
    return running
}

fn getload(){
    load = system("wmic cpu get loadpercentage")
    return load
}

fn onfail(fail, run){
    fail = system(fail+" || "+run)
    return fail
}

fn onpass(valid, run){
    valid = system(fail+" && "+run)
    return valid
}

fn succeed(command){
    status = (system(command+" >nul && echo 1 || echo 0"))
    return int(status)
}

